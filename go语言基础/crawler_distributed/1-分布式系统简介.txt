主要有3点:
1. 多个节点
2. 消息传递
3. 完成特定需求


多个节点: (1) 容错性 (2) 可扩展性(性能，可以通过增加节点来提高性能) (3) 固有分布性



多个节点之间的通信是通过消息传递完成的

消息传递: (1) 节点具有私有存储 (2) 易于开发，只要保证对外的接口不变，里面有私有存储可以随意增加功能 (3) 可扩展性(功能)，对外提供一个接口，里面
可以增加新功能


消息传递的方法
(1) REST 走http协议 GET POST PUT DELETE
(2) RPC  函数调用
(3) 中间件 


架构:

            REST(用户通过REST访问)						RPC                             消息队列
用户    ---------------------------->  总入口服务器  -------------------- 后端服务器  ------------> 后端服务器


1. 对外提供REST接口给用户访问
2. 对内使用RPC
3. 后端服务器之间用的是消息队列来传递的

一般消息传递的方法
(1) 对外: REST
(2) 模块内部: RPC
(3) 模块之间: 中间件、REST


分布式架构 vs 微服务架构

没有一个明确的概念，只是一种思想方法而已

分布式: 指导节点之间如何通信
微服务: 鼓励按业务划分模块

微服务架构通过分布式架构来实现

微服务架构具有更多的"服务"
微服务通常需要配合自动化测试、部署、服务发现等



